#! /bin/bash
set -e
DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
REGISTRY=ghcr.io
ORG=pkegg
BASE_IMAGE=ubuntu:20.04
if [[ -z "$DEVICE" ]]; then
  echo "DEVICE is required"
  exit 1
fi
if [[ -z "$ARCH" ]]; then
  echo "ARCH is required"
  exit 1
fi
DEVICE_LOWER="${DEVICE,,}"
SUDO=
if which docker 2> /dev/null 1> /dev/null && ! docker ps -q 2> /dev/null 1> /dev/null ; then
  SUDO=sudo
fi
echo "Using sudo: $SUDO"
DOCKER_ID=$($SUDO docker create $BASE_IMAGE)

function cleanup {
  echo "cleaning up: $DOCKER_ID"
  $SUDO docker rm -f "$DOCKER_ID"
}
# Call the egress function
trap cleanup EXIT

pushd $DIR/..
$SUDO docker cp build.AmberELEC-$DEVICE.$ARCH/ $DOCKER_ID:/build.AmberELEC-$DEVICE.$ARCH/

DOCKER_IMAGE_HASH=$($SUDO docker commit $DOCKER_ID)
echo "docker image hash: $DOCKER_IMAGE_HASH"

$SUDO docker tag $DOCKER_IMAGE_HASH $REGISTRY/$ORG/amberelec-toolchain-${DEVICE_LOWER}-$ARCH
popd
