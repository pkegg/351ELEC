name: build-main
on:
  repository_dispatch:
    types: [release-beta, release-prerelease, release-draft, release-dev]
  workflow_dispatch:
  push:
    paths-ignore:
      - '.github/**'
      - 'README.md'
      - 'Dockerfile'
      - '.dockerignore'
    branches:
      - main
      - dev
# Ensure that if there are multiple builds for main only 1 is queued during a build
# Example: 1st commit in main starts a build then 2-9 commits come in during the first build.
#          'concurrency' makes it so that only commit 9 is enqueued to build rather builds 2-9 all runing a build.
concurrency:
  group: main

jobs:
  setup:
    name: setup
    runs-on: ubuntu-20.04
    outputs:
      date: ${{ steps.date.outputs.date }}
      version: ${{ steps.version.outputs.version }}
      branch: ${{ steps.branch.outputs.branch }}
      sha: ${{ steps.sha.outputs.sha }}
    steps:
      - uses: hmarr/debug-action@v2
        name: debug
      - name: get current branch as it may not be 'default branch'
        id: branch
        run: |
            branch_arg="${{ github.event.client_payload.branch }}"
            if [[ -z "$branch_arg" ]]; then
              branch_arg="$GITHUB_REF_NAME"
            fi
            echo "::set-output name=branch::$branch_arg"
      - uses: actions/checkout@v2
        name: checkout
        with:
          clean: false
          ref: "${{ steps.branch.outputs.branch }}"
      - name: Get date for artifacts
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d_%H%M')"
      - name: Get short SHA for artifacts
        id: sha
        run: echo "::set-output name=sha::$(git rev-parse --short HEAD)"
      - name: Get dev (or draft release) version
        id: version
        run: |
           set -e
           echo "full name: ${{ github.event.repository.full_name }}"
           if [[ "${{ github.event.client_payload.release_tag }}" != "" ]]; then
               echo "::set-output name=version::${{ github.event.client_payload.release_tag }}"
           else
               echo "::set-output name=version::dev-${{ steps.date.outputs.date }}-${{ steps.sha.outputs.sha }}"
           fi

      - name: Create pre-release as draft at first to hide during uploads
        if: github.event.action == 'release-prerelease'
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ steps.version.outputs.version }}"
          name: "${{steps.date.outputs.date}}"
          body: |
            # Release Notes (Prerelease)
            This is a prerelease based on the commit: ${{ github.event.repository.full_name }}@${{github.sha}}.
    
            Prereleases and provided for the community to test fixes and explore new functionality.  Please DO NOT open issues on this build and instead post in the `#pre-release-feedback` section of discord.
            
            See the [wiki](https://amberelec.org/Contributing-to-AmberELEC) for more info.
            
            ### Changes (since last prerelease version):
            ${{ github.event.client_payload.release_notes }}
            
            ### Upgrade Instructions
            You can update to this release using the `prerelease` channel on your device. This is the recommended way to use prerelease versions.
            
             **IMPORTANT NOTE**: There are **four different images** below, one for the **RG351P/M**, **RG351V**, **RG351MP** and **RG552**! 

            **If you download the incorrect image for your device, it will not boot!**  If you are unsure, use the the following links:
            **New Installations** (`.img.gz`):  **[RG351P/M](https://github.com/${{ github.event.repository.owner.login }}/351ELEC-prerelease/releases/download/${{ steps.version.outputs.version }}/351ELEC-RG351P.aarch64-${{ steps.version.outputs.version }}.img.gz)** |  **[RG351V](https://github.com/${{ github.event.repository.owner.login }}/351ELEC-prerelease/releases/download/${{ steps.version.outputs.version }}/351ELEC-RG351V.aarch64-${{ steps.version.outputs.version }}.img.gz)** |  **[RG351MP](https://github.com/${{ github.event.repository.owner.login }}/351ELEC-prerelease/releases/download/${{ steps.version.outputs.version }}/351ELEC-RG351MP.aarch64-${{ steps.version.outputs.version }}.img.gz)** |  **[RG552](https://github.com/${{ github.event.repository.owner.login }}/351ELEC-prerelease/releases/download/${{ steps.version.outputs.version }}/351ELEC-RG552.aarch64-${{ steps.version.outputs.version }}.img.gz)**
            **Upgrades** (place in `/storage/roms/update`): **[RG351P/M](https://github.com/${{ github.event.repository.owner.login }}/351ELEC-prerelease/releases/download/${{ steps.version.outputs.version }}/351ELEC-RG351P.aarch64-${{ steps.version.outputs.version }}.tar)** |  **[RG351V](https://github.com/${{ github.event.repository.owner.login }}/351ELEC-prerelease/releases/download/${{ steps.version.outputs.version }}/351ELEC-RG351V.aarch64-${{ steps.version.outputs.version }}.tar)** |  **[RG351MP](https://github.com/${{ github.event.repository.owner.login }}/351ELEC-prerelease/releases/download/${{ steps.version.outputs.version }}/351ELEC-RG351MP.aarch64-${{ steps.version.outputs.version }}.tar)** | **[RG552](https://github.com/${{ github.event.repository.owner.login }}/351ELEC-prerelease/releases/download/${{ steps.version.outputs.version }}/351ELEC-RG552.aarch64-${{ steps.version.outputs.version }}.tar)**
          allowUpdates: true
          replacesArtifacts: false
          prerelease: true
          draft: true
          token: ${{ secrets.TRIGGER_BUILD_TOKEN }}
          repo: 351ELEC-prerelease

      - name: Create dev release as draft at first to hide during uploads
        if: github.event.action == 'release-dev'
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ steps.version.outputs.version }}"
          name: "${{steps.date.outputs.date}}"
          body: |
            # Release Notes (Dev - Unsuppported)
            This is an **unsupported dev release** based on the commit: ${{ github.event.repository.full_name }}@${{github.sha}}.
            Unless you were asked by a developer to use this build or **are** a developer.  **Do not use this build.**
            
            ### Changes (since last dev build):
            ${{ github.event.client_payload.release_notes }}
            
            ### Upgrade Instructions
            You can update to this release using the `prerelease` channel on your device if you take the following steps:
            - Under`System Settings` -> `Developer` (`Updates` section), set the following:
              -`GITHUB ORG` = `351dev`
              -`GITHUB REPO` = `builds`
          allowUpdates: true
          replacesArtifacts: false
          prerelease: true
          draft: true
          token: ${{ secrets.TRIGGER_DEV_BUILD_TOKEN }}
          #FIXME: not pkegg!
          owner: pkegg
          repo: builds
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    name: build-${{ matrix.device }}
    needs: [setup]
    strategy:
    
      matrix:
        include:
        - device: rg351p
          device_upper: RG351P
          label: 351p

        - device: rg351v
          device_upper: RG351V
          label: 351v

        - device: rg351mp
          device_upper: RG351MP
          label: 351mp

        - device: rg552
          device_upper: RG552
          label: 552

    timeout-minutes: 1440
    runs-on: ${{ matrix.label }}
    steps:
      - uses: hmarr/debug-action@v2
        name: debug
      - uses: actions/checkout@v2
        name: checkout
        with:
          clean: false
          ref: "${{ needs.setup.outputs.branch }}"

      - name: Build ${{ matrix.device }}
        run: |
            set -e
            export CUSTOM_VERSION="${{ needs.setup.outputs.version }}"
            make DOCKER_WORK_DIR=/work docker-${{ matrix.device_upper }}

      - name: Cleanup system artifacts
        run: |
            set -e
            rm -rf release/aarch64/RG*/*.system*
            rm -rf release/aarch64/RG*/*.kernel*
      - name: Cleanup system artifacts (no .img in non-release 'main' builds)
        if: github.event.client_payload.release_tag == ''
        run: |
            set -e
            #main builds only include the .tar for speed
            rm -rf release/aarch64/RG*/*.img.gz*

      - name: Archive ${{ matrix.device_upper }} (${{github.sha}})
        if: github.event.client_payload.release_tag == ''
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.device_upper }}-dev-main-${{ needs.setup.outputs.date }}-${{needs.setup.outputs.sha}}
          path: |
            release/aarch64/${{ matrix.device_upper }}/
      - name: upload pre-release artifacts
        if: github.event.action == 'release-prerelease'
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ needs.setup.outputs.version }}"
          prerelease: true
          draft: true
          allowUpdates: true
          replacesArtifacts: false
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          artifacts: "release/aarch64/${{ matrix.device_upper }}/*"
          token: ${{ secrets.TRIGGER_BUILD_TOKEN }}
          repo: 351ELEC-prerelease
      - name: upload dev-release artifacts
        if: github.event.action == 'release-dev'
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ needs.setup.outputs.version }}"
          artifacts: "release/aarch64/${{ matrix.device_upper }}/*"
          prerelease: true
          draft: true
          allowUpdates: true
          replacesArtifacts: false
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          token: ${{ secrets.TRIGGER_DEV_BUILD_TOKEN }}
          #FIXME: not pkegg!
          owner: pkegg
          repo: builds
  post:
    runs-on: ubuntu-20.04
    if: github.event.action == 'release-prerelease' || github.event.action == 'release-dev'
    needs: [setup, build]
    steps:
      - name: Switch draft to start showing release 
        if: github.event.action == 'release-prerelease'
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ needs.setup.outputs.version }}"
          allowUpdates: true
          replacesArtifacts: false
          draft: false
          prerelease: true
          token: ${{ secrets.TRIGGER_BUILD_TOKEN }}
          repo: 351ELEC-prerelease
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
      - name: Switch draft to start showing release 
        if: github.event.action == 'release-dev'
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ needs.setup.outputs.version }}"
          allowUpdates: true
          replacesArtifacts: false
          draft: false
          prerelease: true
          token: ${{ secrets.TRIGGER_DEV_BUILD_TOKEN }}
          #FIXME: not pkegg!
          owner: pkegg
          repo: builds
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
