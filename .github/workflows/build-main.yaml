name: build-main
on:
  workflow_dispatch:
    inputs:
      draftRelease:
        description: 'Create draft release (ex: 20210603)'     
        required: false
        default: ''
  push:
    paths-ignore:
      - '.github/**'
      - 'README.me'
      - 'Dockerfile'
      - '.dockerignore'
    branches:
      - main
# Ensure that if there are multiple builds for main only 1 is queued during a build
# Example: 1st commit in main starts a build then 2-9 commits come in during the first build.
#          'concurrency' makes it so that only commit 9 is enqueued to build rather builds 2-9 all runing a build.
concurrency: 
  group: main

jobs:
  build:
    runs-on: main
    steps:
      - uses: actions/checkout@v2
        name: checkout
        with:
          clean: false
      - name: Get date for artifacts
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d_%H%M')"
      - name: Get short SHA for artifacts
        id: sha
        run: echo "::set-output name=sha::$(git rev-parse --short HEAD)"
      - name: Get dev (or draft release) version
        id: version
        run: |
           set -e
           if [[ "${{ github.event.inputs.draftRelease }}" != "" ]]; then
               echo "::set-output name=version::dev-${{ steps.date.outputs.date }}-${{ steps.sha.outputs.sha }}"
           else
               echo "::set-output name=version::{{ github.event.inputs.draftRelease }}"
           fi
      - name: Build rg351P
        run: |
            set -e
            export CUSTOM_VERSION="${{ steps.version.outputs.version }}"
            #make DOCKER_WORK_DIR=/work docker-RG351P
            mkdir -p release/aarch64/RG351P/
            echo "testing" > release/aarch64/RG351P/rg351p.tar
      - name: Build rg351V
        run: |
            set -e
            export CUSTOM_VERSION="${{ steps.version.outputs.version }}"
            #make DOCKER_WORK_DIR=/work docker-RG351V
            mkdir -p release/aarch64/RG351V/

            echo "testing" > release/aarch64/RG351V/rg351v.tar

      - name: Cleanup system artifacts
        run: |
            set -e
            rm -rf release/aarch64/RG351*/*.system*
            rm -rf release/aarch64/RG351*/*.kernel*
      #- name: Archive RG351V (${{github.sha}})
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: RG351V-dev-main-${{ steps.date.outputs.date }}-${{steps.sha.outputs.sha}}
      #
      #    path: |
      #      release/aarch64/RG351V/
      #- name: Archive RG351P (${{github.sha}})
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: RG351P-dev-main-${{ steps.date.outputs.date }}-${{steps.sha.outputs.sha}}
      #    path: |
      #      release/aarch64/RG351P/
      - name: Create pre-release
        uses: softprops/action-gh-release@v1
        if: github.event.inputs.draftRelease == '' 
        with:
          tag_name: "${{ steps.version.outputs.version }}"
          body: |
            This is a pre-release based on the commit: ${{github.sha}}.
            
            You can update to it using the `beta` channel on your device.
          files: |
            release/aarch64/RG351P/*
            release/aarch64/RG351V/*
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create draft release
        uses: softprops/action-gh-release@v1
        if: github.event.inputs.draftRelease != '' 
        with:
          tag_name: "${{ steps.version.outputs.version }}"
          body: |
            This release is: 
            
            You can update to it using the `release` channel on your device.
          files: |
            release/aarch64/RG351P/*
            release/aarch64/RG351V/*
          prerelease: false
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


